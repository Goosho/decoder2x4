// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "09/28/2019 10:34:23"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module decoder2x4 (
	din,
	dout);
input 	[1:0] din;
output 	[3:0] dout;

// Design Ports Information
// dout[0]	=>  Location: PIN_AG3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// dout[1]	=>  Location: PIN_AD5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// dout[2]	=>  Location: PIN_AE6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// dout[3]	=>  Location: PIN_AE5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// din[0]	=>  Location: PIN_AD7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// din[1]	=>  Location: PIN_AD4,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \dout[0]~output_o ;
wire \dout[1]~output_o ;
wire \dout[2]~output_o ;
wire \dout[3]~output_o ;
wire \din[1]~input_o ;
wire \din[0]~input_o ;
wire \dout[3]~0_combout ;
wire \dout[3]~1_combout ;
wire \dout[3]~2_combout ;
wire \dout[3]~3_combout ;


// Location: IOOBUF_X3_Y0_N16
cycloneive_io_obuf \dout[0]~output (
	.i(!\dout[3]~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\dout[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \dout[0]~output .bus_hold = "false";
defparam \dout[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X1_Y0_N23
cycloneive_io_obuf \dout[1]~output (
	.i(\dout[3]~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\dout[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \dout[1]~output .bus_hold = "false";
defparam \dout[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X1_Y0_N16
cycloneive_io_obuf \dout[2]~output (
	.i(\dout[3]~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\dout[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \dout[2]~output .bus_hold = "false";
defparam \dout[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X5_Y0_N23
cycloneive_io_obuf \dout[3]~output (
	.i(\dout[3]~3_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\dout[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \dout[3]~output .bus_hold = "false";
defparam \dout[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X1_Y0_N8
cycloneive_io_ibuf \din[1]~input (
	.i(din[1]),
	.ibar(gnd),
	.o(\din[1]~input_o ));
// synopsys translate_off
defparam \din[1]~input .bus_hold = "false";
defparam \din[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X3_Y0_N1
cycloneive_io_ibuf \din[0]~input (
	.i(din[0]),
	.ibar(gnd),
	.o(\din[0]~input_o ));
// synopsys translate_off
defparam \din[0]~input .bus_hold = "false";
defparam \din[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X2_Y1_N24
cycloneive_lcell_comb \dout[3]~0 (
// Equation(s):
// \dout[3]~0_combout  = (\din[1]~input_o ) # (\din[0]~input_o )

	.dataa(\din[1]~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\din[0]~input_o ),
	.cin(gnd),
	.combout(\dout[3]~0_combout ),
	.cout());
// synopsys translate_off
defparam \dout[3]~0 .lut_mask = 16'hFFAA;
defparam \dout[3]~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X2_Y1_N26
cycloneive_lcell_comb \dout[3]~1 (
// Equation(s):
// \dout[3]~1_combout  = (!\din[1]~input_o  & \din[0]~input_o )

	.dataa(\din[1]~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\din[0]~input_o ),
	.cin(gnd),
	.combout(\dout[3]~1_combout ),
	.cout());
// synopsys translate_off
defparam \dout[3]~1 .lut_mask = 16'h5500;
defparam \dout[3]~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X2_Y1_N28
cycloneive_lcell_comb \dout[3]~2 (
// Equation(s):
// \dout[3]~2_combout  = (\din[1]~input_o  & !\din[0]~input_o )

	.dataa(\din[1]~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\din[0]~input_o ),
	.cin(gnd),
	.combout(\dout[3]~2_combout ),
	.cout());
// synopsys translate_off
defparam \dout[3]~2 .lut_mask = 16'h00AA;
defparam \dout[3]~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X2_Y1_N30
cycloneive_lcell_comb \dout[3]~3 (
// Equation(s):
// \dout[3]~3_combout  = (\din[1]~input_o  & \din[0]~input_o )

	.dataa(\din[1]~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\din[0]~input_o ),
	.cin(gnd),
	.combout(\dout[3]~3_combout ),
	.cout());
// synopsys translate_off
defparam \dout[3]~3 .lut_mask = 16'hAA00;
defparam \dout[3]~3 .sum_lutc_input = "datac";
// synopsys translate_on

assign dout[0] = \dout[0]~output_o ;

assign dout[1] = \dout[1]~output_o ;

assign dout[2] = \dout[2]~output_o ;

assign dout[3] = \dout[3]~output_o ;

endmodule
